{"title":"从@Aspect到Advisor","uid":"a95318a81b0b3097ed11bab255c7390f","slug":"从@Aspect到Advisor","date":"2023-05-11T12:04:08.000Z","updated":"2023-06-28T02:06:04.773Z","comments":true,"path":"api/articles/从@Aspect到Advisor.json","keywords":null,"cover":null,"content":"<h2 id=\"Aspect—-gt-gt-Advisor\"><a href=\"#Aspect—-gt-gt-Advisor\" class=\"headerlink\" title=\"@Aspect—&gt;&gt;Advisor\"></a>@Aspect—&gt;&gt;Advisor</h2><p><strong>AnnotationAwareAspectJAutoProxyCreator</strong></p>\n<p><code>AnnotationAwareAspectJAutoProxyCreator</code>的作用是将高级切面转换成低级切面，使其能够被Spring框架所识别和使用。具体来说，它会读取应用中所有的<code>@Aspect</code>注解，并将这些注解解析成切面的定义。然后，它会对切面定义进行解析，并通过AspectJ编译器将切面转换成可执行的代码块和增强器，并将其绑定到目标对象的代理上。</p>\n<p><strong>findEligibleAdvisors</strong> </p>\n<p>从容器中获取所有的Advisor列表，然后通过匹配切点和目标对象，筛选出适用于该目标对象的Advisor列表。具体包括以下步骤：</p>\n<ol>\n<li>获取Spring容器中的所有Advisor。Spring容器中的Advisor代表着切面中定义的增强器，它们用于在目标对象的方法执行前后进行拦截并执行相应的增强逻辑。在这一步中，<code>findEligibleAdvisors</code>方法会从容器中获取所有Advisor对象列表。</li>\n<li>筛选使用AspectJ注解标注的Aspect对象。在这一步中，<code>findEligibleAdvisors</code>方法会遍历所有的Advisor对象，并检查是否是由使用AspectJ注解标注的Aspect对象创建的。如果是，则表示该Advisor属于切面定义的增强逻辑，需要参与目标对象的代理。</li>\n</ol>\n<p><strong>wrapIfNecessary</strong></p>\n<p>这个方法的作用是检查目标对象是否需要进行代理，如果需要，则创建代理对象。而目标对象是否需要进行代理，则取决于以下几个因素：</p>\n<ol>\n<li>是否启用代理。即是否使用<code>&lt;aop:aspectj-autoproxy&gt;</code>标签启用了自动代理的功能，或者在Java配置中使用<code>@EnableAspectJAutoProxy</code>注解启用了自动代理的功能。</li>\n<li>是否满足代理条件。在Spring框架中，只有当目标对象的类型是非final类或者实现了一个或多个接口时，才能够创建代理对象。否则，Spring框架无法通过动态代理实现对目标对象的增强。</li>\n<li>是否存在增强器。在这个步骤中，Spring框架会调用<code>findAdvisorsThatCanApply</code>方法，查找适合目标对象的增强器列表。如果找到了适合目标对象的增强器，则表示需要为该对象创建代理。</li>\n</ol>\n<p>如果目标对象需要创建代理，<code>wrapIfNecessary</code>方法就会根据目标对象的类型，采用不同的代理方式来创建代理对象。如果目标对象实现了一个或多个接口，则使用JDK动态代理的方式进行代理；否则，使用CGLIB代理的方式进行代理。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span>autoproxy</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>aopalliance<span class=\"token punctuation\">.</span>intercept<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MethodInterceptor</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>aspectj<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Aspect</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>aspectj<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Before</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Advisor</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>aspectj<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AspectJExpressionPointcut</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>aspectj<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AnnotationAwareAspectJAutoProxyCreator</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultPointcutAdvisor</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurationClassPostProcessor</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GenericApplicationContext</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Order</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestAspect</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">GenericApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GenericApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">registerBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aspect1\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Aspect1</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">registerBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"config\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Config</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">registerBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurationClassPostProcessor</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">registerBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AnnotationAwareAspectJAutoProxyCreator</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        for (String name : context.getBeanDefinitionNames()) &#123;</span>\n<span class=\"token comment\">//            System.out.println(name);</span>\n<span class=\"token comment\">//        &#125;</span>\n\n        <span class=\"token comment\">/*\n            第一个重要方法 findEligibleAdvisors 找到有【资格】的 Advisors\n                a. 有【资格】的 Advisor 一部分是低级的, 可以由自己编写, 如下例中的 advisor3\n                b. 有【资格】的 Advisor 另一部分是高级的, 解析 @Aspect 后获得\n         */</span>\n        <span class=\"token class-name\">AnnotationAwareAspectJAutoProxyCreator</span> creator <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AnnotationAwareAspectJAutoProxyCreator</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Advisor</span><span class=\"token punctuation\">></span></span> advisors <span class=\"token operator\">=</span> creator<span class=\"token punctuation\">.</span><span class=\"token function\">findEligibleAdvisors</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Target1</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"target1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Advisor</span> advisor <span class=\"token operator\">:</span> advisors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>advisor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">/*\n            第二个重要方法 wrapIfNecessary\n                a. 它内部调用 findEligibleAdvisors, 只要返回集合不空, 则表示需要创建代理\n         */</span>\n        <span class=\"token class-name\">Object</span> o1 <span class=\"token operator\">=</span> creator<span class=\"token punctuation\">.</span><span class=\"token function\">wrapIfNecessary</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Target1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"target1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"target1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Object</span> o2 <span class=\"token operator\">=</span> creator<span class=\"token punctuation\">.</span><span class=\"token function\">wrapIfNecessary</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Target2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"target2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"target2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>o2<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Target1</span><span class=\"token punctuation\">)</span> o1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/*\n            学到了什么\n                a. 自动代理后处理器 AnnotationAwareAspectJAutoProxyCreator 会帮我们创建代理\n                b. 通常代理创建的活在原始对象初始化后执行, 但碰到循环依赖会提前至依赖注入之前执行\n                c. 高级的 @Aspect 切面会转换为低级的 Advisor 切面, 理解原理, 大道至简\n         */</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Target1</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target1 foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Target2</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target2 bar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Aspect</span> <span class=\"token comment\">// 高级切面类</span>\n<span class=\"token comment\">//    @Order(1)</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Aspect1</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token annotation punctuation\">@Before</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* foo())\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">before1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aspect1 before1...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token annotation punctuation\">@Before</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* foo())\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">before2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aspect1 before2...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Configuration</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Config</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token annotation punctuation\">@Bean</span> <span class=\"token comment\">// 低级切面</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Advisor</span> <span class=\"token function\">advisor3</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodInterceptor</span> advice3<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">AspectJExpressionPointcut</span> pointcut <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AspectJExpressionPointcut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pointcut<span class=\"token punctuation\">.</span><span class=\"token function\">setExpression</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* foo())\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">DefaultPointcutAdvisor</span> advisor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultPointcutAdvisor</span><span class=\"token punctuation\">(</span>pointcut<span class=\"token punctuation\">,</span> advice3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> advisor<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token annotation punctuation\">@Bean</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">MethodInterceptor</span> <span class=\"token function\">advice3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> invocation <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"advice3 before...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Object</span> result <span class=\"token operator\">=</span> invocation<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"advice3 after...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"输出结果\"><a href=\"#输出结果\" class=\"headerlink\" title=\"输出结果\"></a>输出结果</h6><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>interceptor<span class=\"token punctuation\">.</span></span>ExposeInvocationInterceptor</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ADVISOR</span>\n<span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span>低级切面\n<span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span></span>DefaultPointcutAdvisor</span><span class=\"token operator\">:</span> pointcut <span class=\"token punctuation\">[</span><span class=\"token class-name\">AspectJExpressionPointcut</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> advice <span class=\"token punctuation\">[</span>org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span>autoproxy<span class=\"token punctuation\">.</span><span class=\"token constant\">A17</span>$<span class=\"token class-name\">Config</span>$$<span class=\"token class-name\">Lambda</span>$<span class=\"token number\">117</span><span class=\"token operator\">/</span><span class=\"token number\">0x0000000800d64950</span><span class=\"token annotation punctuation\">@d41f816</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span>被解析成低级切面的高级切面\n<span class=\"token class-name\">InstantiationModelAwarePointcutAdvisor</span><span class=\"token operator\">:</span> expression <span class=\"token punctuation\">[</span><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> advice method <span class=\"token punctuation\">[</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span>autoproxy<span class=\"token punctuation\">.</span><span class=\"token constant\">A17</span>$<span class=\"token class-name\">Aspect1</span><span class=\"token punctuation\">.</span><span class=\"token function\">before1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> perClauseKind<span class=\"token operator\">=</span><span class=\"token constant\">SINGLETON</span>\n<span class=\"token class-name\">InstantiationModelAwarePointcutAdvisor</span><span class=\"token operator\">:</span> expression <span class=\"token punctuation\">[</span><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> advice method <span class=\"token punctuation\">[</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span>autoproxy<span class=\"token punctuation\">.</span><span class=\"token constant\">A17</span>$<span class=\"token class-name\">Aspect1</span><span class=\"token punctuation\">.</span><span class=\"token function\">before2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> perClauseKind<span class=\"token operator\">=</span><span class=\"token constant\">SINGLETON</span>\n<span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token class-name\">Target1</span>匹配切面，会创建代理\n<span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span>autoproxy<span class=\"token punctuation\">.</span></span>A17</span>$<span class=\"token class-name\">Target1</span>$$<span class=\"token class-name\">EnhancerBySpringCGLIB</span>$$<span class=\"token number\">7</span>efd35eb\n<span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token class-name\">Target2</span>不匹配切面，不会创建代理\n<span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span>autoproxy<span class=\"token punctuation\">.</span></span>A17</span>$<span class=\"token class-name\">Target2</span>\nadvice3 before<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\naspect1 before1<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\naspect1 before2<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ntarget1 foo\nadvice3 after<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<div style = \"text-align:center\"> <代理对象的创建时机> <div>\n","text":"@Aspect—&gt;&gt;AdvisorAnnotationAwareAspectJAutoProxyCreator AnnotationAwareAspectJAutoProxyCreator的作用是将高级切面转换成低级切面，使其能够被Spring框架所识别和使用。具体来...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Aspect%E2%80%94-gt-gt-Advisor\"><span class=\"toc-text\">@Aspect—&gt;&gt;Advisor</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">输出结果</span></a></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"代理的创建时机","uid":"a685b627e4865e5f328e43bd436e0d9e","slug":"代理的创建时机","date":"2023-05-11T12:55:58.000Z","updated":"2023-05-11T13:36:21.626Z","comments":true,"path":"api/articles/代理的创建时机.json","keywords":null,"cover":null,"text":"代理的创建时机代理的创建时机 创建 -&gt; ( * ) 依赖注入 -&gt; 初始化 ( * ) 初始化之后 (无循环依赖时) 实例创建后, 依赖注入前 (有循环依赖时), 并暂存于二级缓存 public class A17_1 &#123; public static vo...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":29,"path":"api/tags/Java.json"},{"name":"Spring","slug":"Spring","count":11,"path":"api/tags/Spring.json"},{"name":"Proxy","slug":"Proxy","count":2,"path":"api/tags/Proxy.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}},"next_post":{"title":"切点匹配规则","uid":"d3cf2f31cfa6170a433ba0c99bf2326a","slug":"切点匹配规则","date":"2023-05-11T09:35:15.000Z","updated":"2023-05-11T12:02:12.278Z","comments":true,"path":"api/articles/切点匹配规则.json","keywords":null,"cover":null,"text":"切点匹配规则AspectJ使用切点指示器（Pointcut Designator）来描述需要匹配的切点，切点指示器定义了切点的名称、参数、返回类型、标注等信息。切点指示器可以根据需要使用通配符、逻辑运算符、正则表达式等方式来描述切点。 AspectJ中的切点指示符主要分为以下几种...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":29,"path":"api/tags/Java.json"},{"name":"Spring","slug":"Spring","count":11,"path":"api/tags/Spring.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}}}