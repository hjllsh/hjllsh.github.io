{"title":"Redis基础","uid":"b6845422ba4775a7cab0c414606e3ecd","slug":"Redis基础","date":"2023-06-02T14:33:03.000Z","updated":"2023-06-02T15:53:22.315Z","comments":true,"path":"api/articles/Redis基础.json","keywords":null,"cover":null,"content":"<h3 id=\"认识NoSQL\"><a href=\"#认识NoSQL\" class=\"headerlink\" title=\"认识NoSQL\"></a>认识NoSQL</h3><p><strong>NoSql</strong>可以翻译做Not Only Sql（不仅仅是SQL），或者是No Sql（非Sql的）数据库。是相对于传统关系型数据库而言，有很大差异的一种特殊的数据库，因此也称之为<strong>非关系型数据库</strong>。</p>\n<h4 id=\"结构化与非结构化\"><a href=\"#结构化与非结构化\" class=\"headerlink\" title=\"结构化与非结构化\"></a>结构化与非结构化</h4><p>​\t\t传统关系型数据库是结构化数据，每一张表都有严格的约束信息：字段名.字段数据类型.字段约束等等信息，插入的数据必须遵守这些约束</p>\n<p>​\t\tNoSql则对数据库格式没有严格约束，往往形式松散，自由。</p>\n<h4 id=\"关联和非关联\"><a href=\"#关联和非关联\" class=\"headerlink\" title=\"关联和非关联\"></a>关联和非关联</h4><p>​\t\t传统数据库的表与表之间往往存在关联，例如外键</p>\n<p>​\t\t非关系型数据库不存在关联关系，要维护关系要么靠代码中的业务逻辑，要么靠数据之间的耦合：</p>\n<h4 id=\"查询方式\"><a href=\"#查询方式\" class=\"headerlink\" title=\"查询方式\"></a>查询方式</h4><p>​\t\t传统关系型数据库会基于Sql语句做查询，语法有统一标准；</p>\n<p>​\t\t而不同的非关系数据库查询语法差异极大，五花八门各种各样。</p>\n<h4 id=\"事务\"><a href=\"#事务\" class=\"headerlink\" title=\"事务\"></a>事务</h4><p>​\t\t传统关系型数据库能满足事务ACID的原则。</p>\n<p>​\t\t非关系型数据库往往不支持事务，或者不能严格保证ACID的特性，只能实现基本的一致性。</p>\n<h4 id=\"在存储方式-扩展性-查询性能上关系型与非关系型也都有着显著差异\"><a href=\"#在存储方式-扩展性-查询性能上关系型与非关系型也都有着显著差异\" class=\"headerlink\" title=\"在存储方式.扩展性.查询性能上关系型与非关系型也都有着显著差异\"></a>在存储方式.扩展性.查询性能上关系型与非关系型也都有着显著差异</h4><ul>\n<li>存储方式<ul>\n<li>关系型数据库基于磁盘进行存储，会有大量的磁盘IO，对性能有一定影响</li>\n<li>非关系型数据库，他们的操作更多的是依赖于内存来操作，内存的读写速度会非常快，性能自然会好一些</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>扩展性<ul>\n<li>关系型数据库集群模式一般是主从，主从数据一致，起到数据备份的作用，称为垂直扩展。</li>\n<li>非关系型数据库可以将数据拆分，存储在不同机器上，可以保存海量数据，解决内存大小有限的问题。称为水平扩展。</li>\n<li>关系型数据库因为表之间存在关联关系，如果做水平扩展会给数据查询带来很多麻烦</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"认识Redis\"><a href=\"#认识Redis\" class=\"headerlink\" title=\"认识Redis\"></a>认识Redis</h3><p><strong>特征</strong>：</p>\n<ul>\n<li>键值（key-value）型，value支持多种不同数据结构，功能丰富</li>\n<li>单线程，每个命令具备原子性</li>\n<li>低延迟，速度快（基于内存.IO多路复用.良好的编码）。</li>\n<li>支持数据持久化</li>\n<li>支持主从集群.分片集群</li>\n<li>支持多语言客户端</li>\n</ul>\n<h5 id=\"安装Redis\"><a href=\"#安装Redis\" class=\"headerlink\" title=\"安装Redis\"></a>安装Redis</h5><p>Linux版本为CentOS 7.</p>\n<p>Redis是基于C语言编写的，因此首先需要安装Redis所需要的gcc依赖：<code>yum install -y gcc tcl</code></p>\n<p>上传安装包到&#x2F;usr&#x2F;local&#x2F;src 目录并解压：<code>tar -xzf redis-6.2.6.tar.gz</code></p>\n<p>解压后进入redis目录：<code>cd redis-6.2.6</code></p>\n<p>运行编译命令：<code>make &amp;&amp; make install</code></p>\n<p>默认的安装路径是在 <code>/usr/local/bin</code>目录下</p>\n<p>该目录已经默认配置到环境变量，因此可以在任意目录下运行这些命令。其中：</p>\n<ul>\n<li>redis-cli：是redis提供的命令行客户端</li>\n<li>redis-server：是redis的服务端启动脚本</li>\n<li>redis-sentinel：是redis的哨兵启动脚本</li>\n</ul>\n<h5 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h5><p><strong>默认启动</strong>：<code>redis-server </code>这种启动属于<code>前台启动</code>，会阻塞整个会话窗口，窗口关闭或者按下<code>CTRL + C</code>则Redis停止。不推荐使用。</p>\n<p><strong>指定配置启动</strong></p>\n<p>让Redis以<code>后台</code>方式启动，则必须修改Redis配置文件</p>\n<p>先将这个配置文件备份一份：<code>cp redis.conf redis.conf.bck</code></p>\n<p>修改redis.conf文件中的一些配置：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token comment\"># 允许访问的地址，默认是127.0.0.1，会导致只能在本地访问。修改为0.0.0.0则可以在任意IP访问，生产环境不要设置为0.0.0.0</span>\n<span class=\"token key attr-name\">bind</span> <span class=\"token value attr-value\">0.0.0.0</span>\n<span class=\"token comment\"># 守护进程，修改为yes后即可后台运行</span>\n<span class=\"token key attr-name\">daemonize</span> <span class=\"token value attr-value\">yes </span>\n<span class=\"token comment\"># 密码，设置后访问Redis必须输入密码</span>\n<span class=\"token key attr-name\">requirepass</span> <span class=\"token value attr-value\">123321</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Redis的其它常见配置：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token comment\"># 监听的端口</span>\n<span class=\"token key attr-name\">port</span> <span class=\"token value attr-value\">6379</span>\n<span class=\"token comment\"># 工作目录，默认是当前目录，也就是运行redis-server时的命令，日志.持久化等文件会保存在这个目录</span>\n<span class=\"token key attr-name\">dir</span> <span class=\"token value attr-value\">.</span>\n<span class=\"token comment\"># 数据库数量，设置为1，代表只使用1个库，默认有16个库，编号0~15</span>\n<span class=\"token key attr-name\">databases</span> <span class=\"token value attr-value\">1</span>\n<span class=\"token comment\"># 设置redis能够使用的最大内存</span>\n<span class=\"token key attr-name\">maxmemory</span> <span class=\"token value attr-value\">512mb</span>\n<span class=\"token comment\"># 日志文件，默认为空，不记录日志，可以指定日志文件名</span>\n<span class=\"token key attr-name\">logfile</span> <span class=\"token value attr-value\">\"redis.log\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>启动Redis：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 进入redis安装目录 </span>\n<span class=\"token builtin class-name\">cd</span> /usr/local/src/redis-6.2.6\n<span class=\"token comment\"># 启动</span>\nredis-server redis.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>停止服务：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 利用redis-cli来执行 shutdown 命令，即可停止 Redis 服务，</span>\n<span class=\"token comment\"># 因为之前配置了密码，因此需要通过 -u 来指定密码</span>\nredis-cli <span class=\"token parameter variable\">-u</span> <span class=\"token number\">123321</span> <span class=\"token function\">shutdown</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"开机自启\"><a href=\"#开机自启\" class=\"headerlink\" title=\"开机自启\"></a>开机自启</h4><p>我们也可以通过配置来实现开机自启。</p>\n<p>首先，新建一个系统服务文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> /etc/systemd/system/redis.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>内容如下：</p>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">[Unit]\nDescription&#x3D;redis-server\nAfter&#x3D;network.target\n\n[Service]\nType&#x3D;forking\nExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;redis-server &#x2F;usr&#x2F;local&#x2F;src&#x2F;redis-6.2.6&#x2F;redis.conf\nPrivateTmp&#x3D;true\n\n[Install]\nWantedBy&#x3D;multi-user.target<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后重载系统服务：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl daemon-reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>现在可以用下面这组命令来操作redis了：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 启动</span>\nsystemctl start redis\n<span class=\"token comment\"># 停止</span>\nsystemctl stop redis\n<span class=\"token comment\"># 重启</span>\nsystemctl restart redis\n<span class=\"token comment\"># 查看状态</span>\nsystemctl status redis<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行下面的命令，可以让redis开机自启：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> redis<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"Redis常见命令\"><a href=\"#Redis常见命令\" class=\"headerlink\" title=\"Redis常见命令\"></a>Redis常见命令</h3><h4 id=\"Redis数据结构介绍\"><a href=\"#Redis数据结构介绍\" class=\"headerlink\" title=\"Redis数据结构介绍\"></a>Redis数据结构介绍</h4>","feature":true,"text":"认识NoSQLNoSql可以翻译做Not Only Sql（不仅仅是SQL），或者是No Sql（非Sql的）数据库。是相对于传统关系型数据库而言，有很大差异的一种特殊的数据库，因此也称之为非关系型数据库。 结构化与非结构化​ 传统关系型数据库是结构化数据，每一张表都有严格的约束...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"redis","slug":"redis","count":1,"path":"api/tags/redis.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%A4%E8%AF%86NoSQL\"><span class=\"toc-text\">认识NoSQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%84%E5%8C%96%E4%B8%8E%E9%9D%9E%E7%BB%93%E6%9E%84%E5%8C%96\"><span class=\"toc-text\">结构化与非结构化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B3%E8%81%94%E5%92%8C%E9%9D%9E%E5%85%B3%E8%81%94\"><span class=\"toc-text\">关联和非关联</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">查询方式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E5%8A%A1\"><span class=\"toc-text\">事务</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F-%E6%89%A9%E5%B1%95%E6%80%A7-%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD%E4%B8%8A%E5%85%B3%E7%B3%BB%E5%9E%8B%E4%B8%8E%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E4%B9%9F%E9%83%BD%E6%9C%89%E7%9D%80%E6%98%BE%E8%91%97%E5%B7%AE%E5%BC%82\"><span class=\"toc-text\">在存储方式.扩展性.查询性能上关系型与非关系型也都有着显著差异</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%A4%E8%AF%86Redis\"><span class=\"toc-text\">认识Redis</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Redis\"><span class=\"toc-text\">安装Redis</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8\"><span class=\"toc-text\">启动</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF\"><span class=\"toc-text\">开机自启</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Redis%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">Redis常见命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">Redis数据结构介绍</span></a></li></ol></li></ol>","author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"MDC实现链路追踪","uid":"4f10da7078fbc31ecbcb9fd541bf0d6b","slug":"MDC实现简单的链路追踪","date":"2023-06-02T12:36:15.000Z","updated":"2023-06-02T14:15:45.078Z","comments":true,"path":"api/articles/MDC实现简单的链路追踪.json","keywords":null,"cover":null,"text":"MDC实现链路追踪先明确Filter、HandlerInterceptor 和 AOP 的执行流程在 Spring Boot 应用程序中，Filter、HandlerInterceptor 和 AOP 切面都是拦截器组件，在请求处理过程中扮演不同的角色，各自负责不同的任务。在一个...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"链路追踪","slug":"链路追踪","count":1,"path":"api/tags/链路追踪.json"},{"name":"日志","slug":"日志","count":1,"path":"api/tags/日志.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"feature":true}}