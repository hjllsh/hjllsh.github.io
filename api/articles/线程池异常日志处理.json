{"title":"线程池异常日志处理","uid":"c03c4f80044b1216d3d7a05319a58324","slug":"线程池异常日志处理","date":"2023-05-30T12:43:04.000Z","updated":"2023-05-30T13:13:27.663Z","comments":true,"path":"api/articles/线程池异常日志处理.json","keywords":null,"cover":null,"content":"<h2 id=\"线程池异常日志处理\"><a href=\"#线程池异常日志处理\" class=\"headerlink\" title=\"线程池异常日志处理\"></a>线程池异常日志处理</h2><p><em><strong>线程池</strong></em>是作为<strong>池化技术</strong>的一种常见应用</p>\n<p>先定义一个线程池实例</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ThreadPoolExecutor</span> <span class=\"token function\">uncaughtExceptionExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token class-name\">ThreadFactory</span> threadFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n                <span class=\"token function\">setNameFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uncaughtException-worker-%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> processors <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">availableProcessors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"processors:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> processors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ThreadPoolExecutor</span> executor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">(</span>processors<span class=\"token punctuation\">,</span>\n                processors <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                <span class=\"token number\">0L</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MILLISECONDS</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingDeque</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                threadFactory<span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor<span class=\"token punctuation\">.</span>AbortPolicy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> executor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>测试案例</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">executorLogTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">CountDownLatch</span> countDownLatch <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CountDownLatch</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n           uncaughtExceptionExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n               <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n               log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execute str:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//空指针异常</span>\n               <span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n               countDownLatch<span class=\"token punctuation\">.</span><span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n           <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">&#125;</span>\n\n       countDownLatch<span class=\"token punctuation\">.</span><span class=\"token function\">await</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"concurrent execute finished!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>会报空指针，希望会在日志文件中将堆栈信息的日志打印出来，但真实的情况会是什么样的呢？</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">04</span><span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token operator\">:</span><span class=\"token number\">26.593</span> <span class=\"token punctuation\">[</span>uncaughtException<span class=\"token operator\">-</span>worker<span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span>  <span class=\"token class-name\"><span class=\"token namespace\">c<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span></span>UserServiceImpl</span> <span class=\"token operator\">-</span> execute str<span class=\"token operator\">:</span><span class=\"token keyword\">null</span>\n<span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">04</span><span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token operator\">:</span><span class=\"token number\">26.593</span> <span class=\"token punctuation\">[</span>uncaughtException<span class=\"token operator\">-</span>worker<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span>  <span class=\"token class-name\"><span class=\"token namespace\">c<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span></span>UserServiceImpl</span> <span class=\"token operator\">-</span> execute str<span class=\"token operator\">:</span><span class=\"token keyword\">null</span>\n<span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">04</span><span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token operator\">:</span><span class=\"token number\">26.593</span> <span class=\"token punctuation\">[</span>uncaughtException<span class=\"token operator\">-</span>worker<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span>  <span class=\"token class-name\"><span class=\"token namespace\">c<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span></span>UserServiceImpl</span> <span class=\"token operator\">-</span> execute str<span class=\"token operator\">:</span><span class=\"token keyword\">null</span>\n<span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">04</span><span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token operator\">:</span><span class=\"token number\">26.593</span> <span class=\"token punctuation\">[</span>uncaughtException<span class=\"token operator\">-</span>worker<span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span>  <span class=\"token class-name\"><span class=\"token namespace\">c<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span></span>UserServiceImpl</span> <span class=\"token operator\">-</span> execute str<span class=\"token operator\">:</span><span class=\"token keyword\">null</span>\n<span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">04</span><span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token operator\">:</span><span class=\"token number\">26.593</span> <span class=\"token punctuation\">[</span>uncaughtException<span class=\"token operator\">-</span>worker<span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span>  <span class=\"token class-name\"><span class=\"token namespace\">c<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span></span>UserServiceImpl</span> <span class=\"token operator\">-</span> execute str<span class=\"token operator\">:</span><span class=\"token keyword\">null</span>\n<span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">04</span><span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token operator\">:</span><span class=\"token number\">26.593</span> <span class=\"token punctuation\">[</span>uncaughtException<span class=\"token operator\">-</span>worker<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span>  <span class=\"token class-name\"><span class=\"token namespace\">c<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span></span>UserServiceImpl</span> <span class=\"token operator\">-</span> execute str<span class=\"token operator\">:</span><span class=\"token keyword\">null</span>\n<span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">04</span><span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token operator\">:</span><span class=\"token number\">26.599</span> <span class=\"token punctuation\">[</span>uncaughtException<span class=\"token operator\">-</span>worker<span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span>  <span class=\"token class-name\"><span class=\"token namespace\">c<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span></span>UserServiceImpl</span> <span class=\"token operator\">-</span> execute str<span class=\"token operator\">:</span><span class=\"token keyword\">null</span>\n<span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">04</span><span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token operator\">:</span><span class=\"token number\">26.598</span> <span class=\"token punctuation\">[</span>uncaughtException<span class=\"token operator\">-</span>worker<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span>  <span class=\"token class-name\"><span class=\"token namespace\">c<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span></span>UserServiceImpl</span> <span class=\"token operator\">-</span> execute str<span class=\"token operator\">:</span><span class=\"token keyword\">null</span>\n<span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">04</span><span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token operator\">:</span><span class=\"token number\">26.599</span> <span class=\"token punctuation\">[</span>uncaughtException<span class=\"token operator\">-</span>worker<span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span>  <span class=\"token class-name\"><span class=\"token namespace\">c<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span></span>UserServiceImpl</span> <span class=\"token operator\">-</span> execute str<span class=\"token operator\">:</span><span class=\"token keyword\">null</span>\n<span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">04</span><span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token operator\">:</span><span class=\"token number\">26.599</span> <span class=\"token punctuation\">[</span>uncaughtException<span class=\"token operator\">-</span>worker<span class=\"token operator\">-</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span>  <span class=\"token class-name\"><span class=\"token namespace\">c<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">.</span></span>UserServiceImpl</span> <span class=\"token operator\">-</span> execute str<span class=\"token operator\">:</span><span class=\"token keyword\">null</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>log文件中没有异常的堆栈日志，通过分析源码ThreadPoolExecutor 会发现这个问题的根源！</p>\n<p>线程池为了不影响其他线程的执行，会将当前线程的异常全部捕获，但是这样会带来一个问题，若开发人员忘记了处理异常，就会莫名缺少一些关键的堆栈日志，处理这个问题主要有三种方案。</p>\n<p>解决方案</p>\n<ul>\n<li><strong>自行处理异常</strong></li>\n</ul>\n<p>最简单直接的方法就是自己动手丰衣足食，将线程池中的业务逻辑catch起来然后自己处理，这个方案会带来代码上的冗余，尤其是业务代码没有checkException，另外有时开发人员也会忘记添加catch，显然，此方案不是最优方案；</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">executorLogTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">CountDownLatch</span> countDownLatch <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CountDownLatch</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        uncaughtExceptionExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execute str:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"executorLogTest occur error\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n                countDownLatch<span class=\"token punctuation\">.</span><span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    countDownLatch<span class=\"token punctuation\">.</span><span class=\"token function\">await</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"concurrent execute finished!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>按照这种方式处理后，log文件中会显示堆栈信息</p>\n<ul>\n<li><strong>继承ThreadPoolExecutor并重写afterExecute方法</strong></li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomThreadPoolExecutor</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ThreadPoolExecutor</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CustomThreadPoolExecutor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> corePoolSize<span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">int</span> maximumPoolSize<span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">long</span> keepAliveTime<span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">TimeUnit</span> unit<span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">BlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">></span></span> workQueue<span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">ThreadFactory</span> threadFactory<span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">RejectedExecutionHandler</span> handler<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>corePoolSize<span class=\"token punctuation\">,</span> maximumPoolSize<span class=\"token punctuation\">,</span> keepAliveTime<span class=\"token punctuation\">,</span> unit<span class=\"token punctuation\">,</span> workQueue<span class=\"token punctuation\">,</span> threadFactory<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Throwable</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CustomThreadPoolExecutor occur error\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">customExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">CountDownLatch</span> countDownLatch <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CountDownLatch</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            customExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customExecutor str:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                countDownLatch<span class=\"token punctuation\">.</span><span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">&#125;</span>\n\n        countDownLatch<span class=\"token punctuation\">.</span><span class=\"token function\">await</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"concurrent execute finished!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>log文件中会显示堆栈信息</p>\n<ul>\n<li><strong>实现Thread.UncaughtExceptionHandler</strong></li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Thread<span class=\"token punctuation\">.</span>UncaughtExceptionHandler</span> exceptionHandler <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span> t<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Throwable</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"current thread occurs error！\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ThreadPoolExecutor</span> <span class=\"token function\">executor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token class-name\">ThreadFactory</span> threadFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n                <span class=\"token function\">setUncaughtExceptionHandler</span><span class=\"token punctuation\">(</span>exceptionHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n                <span class=\"token function\">setNameFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouse-worker-%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> processors <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">availableProcessors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"processors:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> processors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ThreadPoolExecutor</span> executor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">(</span>processors<span class=\"token punctuation\">,</span>\n                processors <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                <span class=\"token number\">0L</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MILLISECONDS</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingDeque</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                threadFactory<span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor<span class=\"token punctuation\">.</span>AbortPolicy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> executor<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这段代码创建了一个线程池，并为线程池中的线程设置了异常处理器（UncaughtExceptionHandler）。异常处理器的作用是在异常未被捕获时，将异常信息打印到日志中，以便后续排查问题。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">executorLogTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">CountDownLatch</span> countDownLatch <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CountDownLatch</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n           executor<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n               <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n               log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execute str:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n               <span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">&#125;</span>\n\n       countDownLatch<span class=\"token punctuation\">.</span><span class=\"token function\">await</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"concurrent execute finished!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>log文件中会显示堆栈信息</p>\n","text":"线程池异常日志处理线程池是作为池化技术的一种常见应用 先定义一个线程池实例 @Bean public ThreadPoolExecutor uncaughtExceptionExecutor() &#123; ThreadFactory threadFactory = new T...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"线程池","slug":"线程池","count":2,"path":"api/tags/线程池.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%BC%82%E5%B8%B8%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86\"><span class=\"toc-text\">线程池异常日志处理</span></a></li></ol>","author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SpringTask实现定时任务","uid":"34f154820ac35e3d8f3e9afce6bf7431","slug":"SpringTask实现定时任务","date":"2023-05-31T02:51:56.000Z","updated":"2023-05-31T08:12:18.441Z","comments":true,"path":"api/articles/SpringTask实现定时任务.json","keywords":null,"cover":null,"text":"SpringTask SpringTask是Spring自主研发的轻量级定时任务工具，相比于Quartz更加简单方便，且不需要引入其他依赖即可使用。 Cron表达式 Cron表达式是一个字符串，包括6~7个时间元素，在SpringTask中可以用于指定任务的执行时间。 Cron的...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Spring","slug":"Spring","count":11,"path":"api/tags/Spring.json"},{"name":"SpringTask","slug":"SpringTask","count":1,"path":"api/tags/SpringTask.json"},{"name":"定时任务","slug":"定时任务","count":1,"path":"api/tags/定时任务.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}},"next_post":{"title":"SpringSecurity和JWT实现认证授权","uid":"2e24c73ebcb94047e46d06be7faec991","slug":"SpringSecurity和JWT实现认证授权","date":"2023-05-30T02:49:20.000Z","updated":"2023-05-31T02:48:51.996Z","comments":true,"path":"api/articles/SpringSecurity和JWT实现认证授权.json","keywords":null,"cover":null,"text":"SpringSecurity和JWT实现认证授权在pom.xml中添加项目依赖&lt;!--SpringSecurity依赖配置--> &lt;dependency> &lt;groupId>org.springframework.boot&lt;/groupId> &lt;ar...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"22 mins."},"categories":[],"tags":[{"name":"认证授权","slug":"认证授权","count":2,"path":"api/tags/认证授权.json"},{"name":"SpringSecurity","slug":"SpringSecurity","count":1,"path":"api/tags/SpringSecurity.json"},{"name":"JWT","slug":"JWT","count":1,"path":"api/tags/JWT.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}}}