{"total":85,"pageSize":12,"pageCount":8,"data":[{"title":"Elasticsearch_DSL","uid":"a3047e4f83f81595969b248afaf5a9f0","slug":"Elasticsearch_DSL","date":"2023-06-25T12:22:32.000Z","updated":"2023-06-26T08:30:34.939Z","comments":true,"path":"api/articles/Elasticsearch_DSL.json","cover":[],"text":"DSL查询文档elasticsearch的查询依然是基于JSON风格的DSL来实现的。 DSL查询分类Elasticsearch提供了基于JSON的DSL（Domain Specific Language）来定义查询。常见的查询类型包括： 查询所有：查询出所有数据，一般测试用。例...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[],"tags":[{"name":"Elasticsearch","slug":"Elasticsearch","count":2,"path":"api/tags/Elasticsearch.json"},{"name":"实战","slug":"实战","count":1,"path":"api/tags/实战.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"feature":true},{"title":"Elasticsearch_基础篇","uid":"9a2b3773acf33bcdefc6399e19f6d844","slug":"Elasticsearch_基础篇","date":"2023-06-24T08:27:29.000Z","updated":"2023-06-24T15:41:15.088Z","comments":true,"path":"api/articles/Elasticsearch_基础篇.json","cover":[],"text":"倒排索引倒排索引的概念是基于MySQL这样的正向索引而言的。 正向索引那么什么是正向索引呢？例如给下表（tb_goods）中的id创建索引： 如果是根据id查询，那么直接走索引，查询速度非常快。 如果是基于title做模糊查询，只能逐行扫描数据，也就是全表扫描，随着数据量增加，其...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[],"tags":[{"name":"Elasticsearch","slug":"Elasticsearch","count":2,"path":"api/tags/Elasticsearch.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"feature":true},{"title":"RocketMQ","uid":"5ada78e6ba193fc543a90e69af063c59","slug":"RocketMQ","date":"2023-06-21T11:48:08.000Z","updated":"2023-06-21T11:48:08.975Z","comments":true,"path":"api/articles/RocketMQ.json","cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"feature":true},{"title":"SpringBoot实现限制接口访问频率","uid":"b3bf94fa19061188c47e8cc343ee56e4","slug":"SpringBoot实现限制接口访问频率","date":"2023-06-19T04:07:44.000Z","updated":"2023-06-19T04:07:44.467Z","comments":true,"path":"api/articles/SpringBoot实现限制接口访问频率.json","cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}},{"title":"JVM","uid":"0b1381c4a63c09e41167c5168339035a","slug":"JVM","date":"2023-06-18T11:35:24.000Z","updated":"2023-06-19T11:59:30.726Z","comments":true,"path":"api/articles/JVM.json","cover":[],"text":"JVM 内存结构 执行 javac 命令编译源代码为字节码 执行 java 命令 创建 JVM，调用类加载子系统加载 class，将类的信息存入方法区 创建 main 线程，使用的内存区域是 JVM 虚拟机栈，开始执行 main 方法代码 如果遇到了未见过的类，会继续触发类加载过...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":29,"path":"api/tags/Java.json"},{"name":"JVM","slug":"JVM","count":1,"path":"api/tags/JVM.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}},{"title":"论坛学习笔记(1)","uid":"20f41e298540726590150ca54cb0ec96","slug":"论坛学习笔记-1","date":"2023-06-17T14:02:04.000Z","updated":"2023-06-17T14:16:46.548Z","comments":true,"path":"api/articles/论坛学习笔记-1.json","cover":null,"text":"mybatis篇mybatis的配置 数据库不区分大小写，配置mysql表字段的下划线映射java实体的驼峰命名 配置自增主键的表，自动生成主键并返回主键给实体，在插入的标签上添加keyproperties属性 配置mapper.xml的路径 配置实体类的包名 在mapper接口...","link":"","photos":[],"count_time":{"symbolsCount":169,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":1,"path":"api/tags/学习笔记.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}},{"title":"Java I/O","uid":"2c570c14ab50f79f35e97f38eeea9026","slug":"Java-IO","date":"2023-06-17T09:45:56.000Z","updated":"2023-06-17T10:15:17.802Z","comments":true,"path":"api/articles/Java-IO.json","cover":null,"text":"I&#x2F;O 流的分类按照读写的单位大小来分： 字符流：以字符为单位，每次次读入或读出是 16 位数据。其只能读取字符类型数据。(Java 代码接收数据一般为 char 数组，也可以是别的) 字节流：以字节为单位，每次读入或读出是 8 位数据。可以读任何类型数据，图片、文件、...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":29,"path":"api/tags/Java.json"},{"name":"IO","slug":"IO","count":2,"path":"api/tags/IO.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}},{"title":"Redis数据结构","uid":"95d031e6876e8ced445f4faed1bda7eb","slug":"Redis数据结构","date":"2023-06-16T13:30:38.000Z","updated":"2023-06-17T14:17:40.240Z","comments":true,"path":"api/articles/Redis数据结构.json","cover":[],"text":"Redis数据结构-动态字符串SDSRedis没有直接使用C语言中的字符串，因为C语言字符串存在很多问题： 获取字符串长度的需要通过运算 非二进制安全 不可修改 Redis构建了一种新的字符串结构，称为简单动态字符串（Simple Dynamic String），简称SDS。 R...","link":"","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"redis","slug":"redis","count":14,"path":"api/tags/redis.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}},{"title":"Linux实战操作","uid":"1259182ad65f322df495428ef17055e6","slug":"Linux实战操作","date":"2023-06-16T04:22:35.000Z","updated":"2023-06-16T13:25:14.926Z","comments":true,"path":"api/articles/Linux实战操作.json","cover":[],"text":"一个开源的中文查Linux命令的网站：https://wangchujiang.com/linux-command/list.html Linux目录结构 &#x2F;bin 是Binary的缩写，这个目录存放着最经典的常用命令 &#x2F;Sbin s是Super User的意...","link":"","photos":[],"count_time":{"symbolsCount":"7.6k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"Linux","slug":"Linux","count":2,"path":"api/tags/Linux.json"},{"name":"Shell","slug":"Shell","count":1,"path":"api/tags/Shell.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}},{"title":"Redis主从-哨兵-分片集群","uid":"e17bf8cdf59871b374971436072adfe0","slug":"Redis主从-哨兵-分片集群","date":"2023-06-15T09:27:23.000Z","updated":"2023-06-15T12:49:23.964Z","comments":true,"path":"api/articles/Redis主从-哨兵-分片集群.json","cover":[],"text":"Redis主从单节点Redis的并发能力是有上限的，要进一步提高Redis的并发能力，就需要搭建主从集群，实现读写分离。 主从数据同步原理全量同步主从第一次建立连接时，会执行全量同步，将master节点的所有数据都拷贝给slave节点，流程： master如何得知salve是第一...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"redis","slug":"redis","count":14,"path":"api/tags/redis.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}},{"title":"Redis持久化","uid":"25530e52ab0638e424f51939c49f1051","slug":"Redis持久化","date":"2023-06-15T08:51:33.000Z","updated":"2023-06-15T09:24:04.798Z","comments":true,"path":"api/articles/Redis持久化.json","cover":[],"text":"Redis持久化RDB持久化RDB全称Redis Database Backup file（Redis数据备份文件），也被叫做Redis数据快照。简单来说就是把内存中的所有数据都记录到磁盘中。当Redis实例故障重启后，从磁盘读取快照文件，恢复数据。快照文件称为RDB文件，默认是...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"redis","slug":"redis","count":14,"path":"api/tags/redis.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}},{"title":"Git经典场景操作","uid":"a23f2d002fc146791ed8e3604cc7ab69","slug":"Git经典场景操作","date":"2023-06-14T14:29:11.000Z","updated":"2023-06-15T13:58:30.560Z","comments":true,"path":"api/articles/Git经典场景操作.json","cover":[],"text":"Git常用命令 命令名称 作用 git config –global user.name 用户名 设置用户签名 git config –global user.email 邮箱 设置用户签名 git init 初始化本地库 git status 查看本地库状态 git add 文...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"Git","slug":"Git","count":1,"path":"api/tags/Git.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}}}]}