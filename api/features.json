[{"title":"Redis基础","uid":"b6845422ba4775a7cab0c414606e3ecd","slug":"Redis基础","date":"2023-06-02T14:33:03.000Z","updated":"2023-06-02T15:53:22.315Z","comments":true,"path":"api/articles/Redis基础.json","cover":null,"text":"认识NoSQLNoSql可以翻译做Not Only Sql（不仅仅是SQL），或者是No Sql（非Sql的）数据库。是相对于传统关系型数据库而言，有很大差异的一种特殊的数据库，因此也称之为非关系型数据库。 结构化与非结构化​ 传统关系型数据库是结构化数据，每一张表都有严格的约束...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"redis","slug":"redis","count":1,"path":"api/tags/redis.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"feature":true},{"title":"MDC实现链路追踪","uid":"4f10da7078fbc31ecbcb9fd541bf0d6b","slug":"MDC实现简单的链路追踪","date":"2023-06-02T12:36:15.000Z","updated":"2023-06-02T14:15:45.078Z","comments":true,"path":"api/articles/MDC实现简单的链路追踪.json","cover":null,"text":"MDC实现链路追踪先明确Filter、HandlerInterceptor 和 AOP 的执行流程在 Spring Boot 应用程序中，Filter、HandlerInterceptor 和 AOP 切面都是拦截器组件，在请求处理过程中扮演不同的角色，各自负责不同的任务。在一个...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"链路追踪","slug":"链路追踪","count":1,"path":"api/tags/链路追踪.json"},{"name":"日志","slug":"日志","count":1,"path":"api/tags/日志.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"feature":true},{"title":"线程池的管理和使用","uid":"b491cfca14c8d6dfd4f8108806508bb6","slug":"线程池的管理和使用","date":"2023-06-01T06:36:07.000Z","updated":"2023-06-01T07:31:48.679Z","comments":true,"path":"api/articles/线程池的管理和使用.json","cover":[],"text":"线程池的管理和使用​ 频繁的创建、销毁线程和线程池，会给系统带来额外的开销。未经池化及统一管理的线程，则会导致系统内线程数上限不可控。这种情况下，随着访问数增加，系统内线程数持续增长，CPU负载逐步提高。极端情况下，甚至可能会导致CPU资源被吃满，整个服务不可用。 解决方案替换掉...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"线程池","slug":"线程池","count":2,"path":"api/tags/线程池.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"feature":true}]