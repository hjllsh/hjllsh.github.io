[{"title":"MySQL_约束","uid":"e3a23871861ca2fad9d70d3df8595afe","slug":"MySQL-约束","date":"2023-05-16T13:40:42.000Z","updated":"2023-05-16T15:50:51.247Z","comments":true,"path":"api/articles/MySQL-约束.json","cover":null,"text":"约束概念：约束是作用于表中字段上的规则，用于限制存储在表中的数据。 目的：保证数据库中数据的正确、有效性和完整性。 约束 描述 关键词 非空约束 限制该字段的数据不能为null NOT NULL 唯一约束 保证该字段的所有数据都是唯一、不重复的 UNIQUE 主键约束 主键是一行...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"feature":true},{"title":"MySQL_DCL_函数","uid":"8f9e88b96addebc57d8b075bdae2d985","slug":"MySQL-DCL-函数","date":"2023-05-16T08:56:15.000Z","updated":"2023-05-16T13:39:52.755Z","comments":true,"path":"api/articles/MySQL-DCL-函数.json","cover":[],"text":"DCLData Control Language(数据控制语言)，用来管理数据库用户、控制数据库的访问权限。 管理用户查询用户 select * from mysql.user; 其中 Host代表当前用户访问的主机, 如果为localhost, 仅代表只能够在当前本机访问，是不...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"feature":true},{"title":"状态模式","uid":"b886b366f3cb34006709f66f49ec6b62","slug":"状态模式","date":"2023-05-15T10:11:38.000Z","updated":"2023-05-15T11:53:16.531Z","comments":true,"path":"api/articles/状态模式.json","cover":null,"text":"状态模式它将对象的行为与其内部状态分离开来，使得对象可以根据其内部状态的变化而改变其行为。状态模式通过将状态的切换封装在状态类中，使得状态转换具有可扩展性和灵活性，并避免了由于状态转换所带来的“if-else”嵌套过多的问题。 状态模式的基本机制是将状态抽象为一个接口或者抽象类，...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":25,"path":"api/tags/Java.json"},{"name":"设计模式","slug":"设计模式","count":17,"path":"api/tags/设计模式.json"}],"author":{"name":"大宝贝的程序员","slug":"blog-author","avatar":"/img/header.jpg","link":"/","description":"Java实习生,即将入职场的小白","socials":{"github":"https://github.com/hjllsh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://mp.csdn.net/mp_blog/manage/article","juejin":"","customs":{}}},"feature":true}]